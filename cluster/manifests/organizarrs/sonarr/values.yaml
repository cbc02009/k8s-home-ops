apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarr-values
  namespace: organizarrs
data:
  values.yaml: |-


    podAnnotations:
        configmap.reloader.stakater.com/reload: "sonarr-values"

    controllerType: deployment

    image:
      repository: ghcr.io/onedr0p/sonarr-widowmaker
      tag: 4.0.0.2177

    env:
      TZ: "${TZ}"
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 8989
      PUSHOVER_APP_URL: &host "{{ .Release.Name }}.${EXTERNAL_DOMAIN}"
      SONARR__APPLICATION_URL: "https://{{ .Release.Name }}.${EXTERNAL_DOMAIN}"
      SONARR__LOG_LEVEL: info

    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${LB_SONARR}
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${EXTERNAL_DOMAIN}/css/base/sonarr/overseerr.css"></head>';
            sub_filter_once on;
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-box"
          hajimari.io/appName: sonarr
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: &tls tls.sonarr

      # api:
      #   enabled: true
      #   ingressClassName: "nginx"
      #   annotations:
      #     external-dns.home.arpa/enabled: "true"
      #     external-dns.alpha.kubernetes.io/target: ipv4.${EXTERNAL_DOMAIN}
      #     external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
      #   hosts:
      #     - host: *host
      #       paths:
      #         - path: /api
      #           pathType: Prefix
      #   tls:
      #     - hosts:
      #         - *host
      #       secretName: *tls

    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-v1

      nfs-nas-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${UIHARU_IP}
            path: /tank/media
        mountPath: /media
        readOnly: false

      nfs-nas-bittorrent:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${UIHARU_IP}
            path: /smoltank/bittorrent
        mountPath: /bittorrent
        readOnly: false

      nfs-nas-backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${UIHARU_IP}
            path: /tank/backup/kubernetes/apps/sonarr
        mountPath: /config/Backups
        readOnly: false

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100

    resources:
      requests:
        cpu: 10m
        memory: 477M
      limits:
        memory: 1300M
