---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/kyverno.io/clusterpolicy_v1.json
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: ingress-authentik-annotation
  annotations:
    policies.kyverno.io/title: Authentik ingress annotation
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/description: >-
      This policy creates auth annotations on ingresses. When
      the `authentik.home.arpa/enabled` annotation is `true` it
      applies the nginx auth annotations for use with Authentik.
spec:
  background: true
  mutateExistingOnPolicyUpdate: true
  rules:
    - name: auth
      match:
        any:
          - resources:
              kinds: ["Ingress"]

      mutate:
        targets:
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
            namespace: "{{request.object.metadata.namespace}}"
        patchStrategicMerge:
          metadata:
            annotations:
              <(authentik.home.arpa/enabled): "true"
              +(nginx.ingress.kubernetes.io/auth-response-headers): |-
                Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
              +(nginx.ingress.kubernetes.io/auth-snippet): |-
                proxy_set_header X-Forwarded-Host $http_host;
              +(nginx.ingress.kubernetes.io/auth-url): |-
                http://ak-outpost-proxy-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
              +(nginx.ingress.kubernetes.io/auth-signin): |-
               /outpost.goauthentik.io/start?rd=$escaped_request_uri
