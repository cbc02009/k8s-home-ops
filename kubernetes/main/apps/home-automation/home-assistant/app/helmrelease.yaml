---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app home-assistant
  namespace: home-automation
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: system
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          # 02-wait-for-pg:
          #   image:
          #     repository: quay.io/prometheus/busybox
          #     tag: 'latest'
          #   imagePullPolicy: IfNotPresent
          #   command:
          #     [
          #       "sh",
          #       "-c",
          #       'until nc -vz postgres.${EXTERNAL_DOMAIN} 5432; do echo "Waiting for postgres..."; sleep 3; done;',
          #     ]
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: '16.2'
            envFrom:
              - secretRef:
                  name: *app
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2024.1.6@sha256:3ae078c549ba6a0d2c6f2921aab53e492cd688956da6a51867e999f87ed59d13
            env:
              TZ: "${TZ}"
              POSTGRES_HOST: postgres-rw.databases.svc.cluster.local
              POSTGRES_DB: home_assistant
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
                resources:
                  requests:
                    cpu: 10m
                    memory: 128Mi
                  limits:
                    memory: 1Gi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch


    service:
      main:
        ports:
          http:
            port: 8123

    ingress:
      main:
        enabled: true
        className: "internal"
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        hosts:
          - host: &host "hass.${EXTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: *host
            hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: *app
