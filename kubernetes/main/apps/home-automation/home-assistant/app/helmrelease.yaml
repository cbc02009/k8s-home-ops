---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app home-assistant
  namespace: home-automation
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      home-assistant:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          # 02-wait-for-pg:
          #   image:
          #     repository: quay.io/prometheus/busybox
          #     tag: 'latest'
          #   imagePullPolicy: IfNotPresent
          #   command:
          #     [
          #       "sh",
          #       "-c",
          #       'until nc -vz postgres.${EXTERNAL_DOMAIN} 5432; do echo "Waiting for postgres..."; sleep 3; done;',
          #     ]
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: '16.6'
            envFrom:
              - secretRef:
                  name: *app
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2025.2.1@sha256:22f4ece646d7d5f1fd0c69e7c5ba7341e06205ce499a94e8096e64d06f8edf24
            env:
              TZ: "${TZ}"
              POSTGRES_HOST: postgres-rw.databases.svc.cluster.local
              POSTGRES_DB: home_assistant
              HASS_HTTP_TRUSTED_PROXY_1: 10.0.0.0/8
            envFrom:
              - secretRef:
                  name: *app
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 2Gi
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.96.4@sha256:f93810f7f6636b3af3b1a750faf612349cddb89fbb6d28d69123a214fc75ee9e
            args: [
              "--auth", "none",
              "--user-data-dir", "/config/.vscode",
              "--extensions-dir", "/config/.vscode",
              "--port", "12321",
              "/config"
            ]
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }


    service:
      app:
        controller: *app
        ports:
          http:
            port: 8123
          code-server:
            port: 12321

    ingress:
      app:
        className: "internal"
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        hosts:
          - host: &host "hass.${EXTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
      code-server:
        className: internal
        hosts:
          - host: &code-host "hass-code.${EXTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: code-server

    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
