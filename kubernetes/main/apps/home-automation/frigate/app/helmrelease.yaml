---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app frigate
  namespace: home-automation
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: intel-device-plugins-gpu
      namespace: system
    - name: emqx
      namespace: home-automation
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: system
  values:

    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: google.feature.node.kubernetes.io/coral
                    operator: In
                    values:
                      - 'true'

    controllers:
      frigate:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: 'true'

        containers:
          app:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.13.2

            envFrom:
              - secretRef:
                  name: *app

            env:
              TZ: ${TZ}
              # LIBVA_DRIVER_NAME: i965
              FRIGATE_MQTT_USERNAME: frigate
              FRIGATE_MQTT_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: emqx
                    key: USER_1_PASSWORD

            resources:
              requests:
                cpu: 10m
                memory: 1000Mi
              limits:
                gpu.intel.com/i915: "1"
                memory: 8000Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000

                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            securityContext:
              privileged: true

    service:
      main:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          authentik.home.arpa/enabled: "true"
        hosts:
          - host: &host '{{ .Release.Name }}.${EXTERNAL_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: *host
            hosts:
              - *host

    persistence:
      data:
        enabled: true
        existingClaim: *app
      config:
        enabled: true
        type: configMap
        name: frigate
        globalMounts:
          - path: /config/config.yml
            subPath: config.yaml
      media:
        type: nfs
        server: nas.ctec.run
        path: /tank/k8s/apps/frigate
        globalMounts:
          - path: /media
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        globalMounts:
          - path: /dev/shm
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        globalMounts:
          - path: /dev/bus/usb
