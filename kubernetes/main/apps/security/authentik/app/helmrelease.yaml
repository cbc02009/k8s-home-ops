---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app authentik
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2023.10.7
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: security
  values:
    annotations:
      secret.reloader.stakater.com/reload: authentik-secret,authentik-redis

    initContainers:
      01-init-db:
        envFrom:
          - secretRef:
              name: authentik-secret
        image: ghcr.io/onedr0p/postgres-init:16.1
        imagePullPolicy: IfNotPresent

    image:
      tag: 2023.8.4
      pullPolicy: IfNotPresent
    # image:
    #   repository: ghcr.io/goauthentik/dev-server
    #   tag: gh-next
    #   # pullPolicy: Always to ensure you always get the latest version
    #   pullPolicy: IfNotPresent

    authentik:
      log_level: debug
      email:
        port: 25
        use_tls: false
      error_reporting:
        enabled: false
        send_pii: false
      redis:
        host: "authentik-redis.security.svc.cluster.local"
        password: ""
      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
        # container_image_base: ghcr.io/goauthentik/dev-%(type)s:gh-%(build_hash)s

    envFrom:
      - secretRef:
          name: authentik-secret

    ingress:
      enabled: true
      ingressClassName: external
      annotations:
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      hosts:
        - host: &host auth.${EXTERNAL_DOMAIN}
          paths:
            - path: /
      tls:
        - secretName: *host
          hosts:
            - *host

    postgresql:
      enabled: false

    prometheus:
      rules:
        create: true
      serviceMonitor:
        create: true

    redis:
      enabled: false

    autoscaling:
      server:
        enabled: true
      worker:
        enabled: true
