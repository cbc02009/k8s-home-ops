---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app cloudflared
  namespace: network
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    defaultPodOptions:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: cloudflared

    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: 'true'

        containers:
          main:
            image:
              repository: ghcr.io/cbc02009/cloudflared
              tag: 2023.10.0

            args:
              - tunnel
              - --config
              - /etc/cloudflared/config/config.yaml
              - run
              - ${CLUSTER_CLOUDFLARE_TUNNEL_ID}

            env:
              NO_AUTOUPDATE: 'true'
              TUNNEL_CRED_FILE: /etc/cloudflared/creds/credentials.json
              TUNNEL_METRICS: 0.0.0.0:8080
              TUNNEL_TRANSPORT_PROTOCOL: auto

            resources:
              requests:
                cpu: 5m
                memory: 30Mi
              limits:
                memory: 128Mi
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  failureThreshold: 30
                  periodSeconds: 10

    service:
      main:
        ports:
          http:
            port: 8080

    persistence:
      config:
        enabled: true
        type: configMap
        name: cloudflared-configmap
        readOnly: true
        globalMounts:
          - path: /etc/cloudflared/config/config.yaml
            subPath: config.yaml
      creds:
        enabled: true
        type: secret
        name: *app
        readOnly: true

        globalMounts:
          - path: /etc/cloudflared/creds/credentials.json
            subPath: credentials.json
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 30s
