---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app calibre
  namespace: media
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: volsync
      namespace: system
  values:

    controllers:
      calibre:
        type: statefulset

        containers:
          app:
            image:
              repository: ghcr.io/linuxserver/calibre
              tag: 7.26.0

            env:
              TZ: ${TZ}
              PUID: '2000'
              PGID: '2000'
              FM_HOME: /media/calibre
              UMASK_SET: 002

            resources:
              requests:
                cpu: 15m
                memory: 249M
              limits:
                memory: 4000M

            probes:
              startup:
                spec:
                  initialDelaySeconds: 60
                  failureThreshold: 160
    service:
      main:
        controller: *app
        ports:
          http:
            port: &port 8080

      webserver:
        controller: *app
        primary: false
        ports:
          webserver:
            enabled: true
            port: 8081
            protocol: TCP
            targetPort: 8081
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        loadBalancerIP: ${LB_CALIBRE}

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.kokoro.wtf"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        enabled: true
        existingClaim: *app
      media:
        enabled: true
        type: nfs
        server: nas.${INTERNAL_DOMAIN}
        path: /tank/media
        globalMounts:
          - path: /media
