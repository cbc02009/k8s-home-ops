---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app calibre-web-automated
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:

    defaultPodOptions:
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 1010

    controllers:
      calibre-web-automated:
        type: statefulset
        strategy: RollingUpdate

        containers:
          app:
            image:
              repository: docker.io/crocodilestick/calibre-web-automated
              tag: V3.0.4@sha256:bdf3dbf10be5a22cea09dd05f4d9ac4e7bdba4c411fef3e15c512ca723ee393d

            env:
              TZ: ${TZ}
              PUID: '568' # "${APP_UID}"
              PGID: '568' #"${APP_GID}"
              CACHE_DIR: /cache
              CALIBRE_PORT: &port 8083
              DOCKER_MODS: >-
                {{- $items := list
                  "// renovate: lsio-docker-mod"
                  "ghcr.io/linuxserver/mods:universal-calibre-v7.16.0"
                -}}
                {{- $filtered := list -}}
                {{- range $item := $items -}}
                  {{- if not (hasPrefix "//" $item) -}}
                    {{- $filtered = append $filtered $item -}}
                  {{- end -}}
                {{- end -}}
                {{- $filtered | join "|" -}}

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  initialDelaySeconds: 60
                  failureThreshold: 45
                  periodSeconds: 5

            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 768Mi

    service:
      main:
        controller: *app
        ports:
          http:
            port: 8083

    ingress:
      main:
        enabled: true
        # className: external
        # annotations:
        #   authentik.home.arpa/enabled: "true"
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
          nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
          nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "256k"
        hosts:
          - host: &host cwa.${EXTERNAL_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts: [*host]

    persistence:
      config:
        enabled: true
        existingClaim: *app
      ingest:
        enabled: true
        type: nfs
        server: &nas ${NAS_HOST}
        path: /tank/media/
        globalMounts:
          - path: /calibre-library
            subPath: calibre
          - path: /cwa-book-ingest
            subPath: cwa-ingest
      cache:
        type: emptyDir
        globalMounts:
          - path: /cache
