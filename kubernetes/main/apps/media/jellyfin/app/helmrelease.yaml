---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app jellyfin
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: system
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 44
          - 109
          - 100
          - 1010

    controllers:
      main:
        type: statefulset

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/jellyfin
              tag: 10.8.11

            env:
              TZ: ${TZ}

            resources:
              requests:
                cpu: 100m
                memory: 2000M
              limits:
                memory: 10000M
    service:
      main:
        ports:
          http:
            port: 32400

    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host '{{ .Release.Name }}.${EXTERNAL_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - secretName: *host
            hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: *app

      cache:
        enabled: true
        type: emptyDir
        advancedMounts:
          main:
            main:
              - path: /config/cache

      media:
        enabled: true
        type: nfs
        server: &nas nas.ctec.run
        path: /tank/media
        globalMounts:
          - path: /media
