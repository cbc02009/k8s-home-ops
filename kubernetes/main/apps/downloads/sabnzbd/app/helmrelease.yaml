---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app sabnzbd
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: system
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 100

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: feature.node.kubernetes.io/10gb-network
                    operator: In
                    values:
                      - 'true'

    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: 'true'

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.1.0@sha256:7d2eef3351586c6856b69fb4f846969db325d0f5472bc7a315f8d0fe1b0890cb

            envFrom:
              - secretRef:
                  name: *app

            env:
              TZ: ${TZ}
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd, sabnzbd.media, sabnzbd.downloads.svc, sabnzbd.downloads.svc.cluster,
                sabnzbd.downloads.svc.cluster.local, sabnzbd.${EXTERNAL_DOMAIN}
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 8000Mi

    # -- Affinity constraint rules to place the Pod on a specific node.
    # [[ref]](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)
    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
        hosts:
          - host: &host '{{ .Release.Name }}.${EXTERNAL_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: *app
      media:
        enabled: true
        type: nfs
        server: nas.ctec.run
        path: /tank/media
        globalMounts:
          - path: /media
      incomplete:
        enabled: true
        type: emptyDir
    podAnnotations:
      setGateway: 'true'
