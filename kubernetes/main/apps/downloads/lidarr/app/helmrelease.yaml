---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lidarr
  namespace: downloads
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  values:

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }

    controllers:
      lidarr:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: 'true'

        initContainers:
          01-init-db:
            envFrom:
              - secretRef:
                  name: *app

            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: '17.4.0'
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/lidarr
              tag: 2.10.3.4602

            envFrom:
              - secretRef:
                  name: *app

            env:
              TZ: ${TZ}
              LIDARR__APP__INSTANCENAME: Lidarr
              LIDARR__APP__THEME: dark
              LIDARR__AUTH__METHOD: External
              LIDARR__AUTH__REQUIRED: DisabledForLocalAddresses
              LIDARR__LOG__DBENABLED: "False"
              LIDARR__LOG__LEVEL: info
              LIDARR__SERVER__PORT: &port 80
              LIDARR__UPDATE__BRANCH: develop


            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 2000Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.kokoro.wtf"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config-v1

      media:
        enabled: true
        type: nfs
        server: &nas ${NAS_HOST}
        path: /tank/media
        globalMounts:
          - path: /media
