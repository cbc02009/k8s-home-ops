---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app thanos
  namespace: observability
spec:
  interval: 30m
  chart:
    spec:
      chart: thanos
      version: 13.4.1
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: redis
      namespace: databases
    - name: rook-ceph-cluster
      namespace: rook-ceph
  valuesFrom:
    - kind: Secret
      name: *app
      valuesKey: S3_BUCKET_NAME
      targetPath: objstoreConfig.config.bucket
    - kind: Secret
      name: *app
      valuesKey: S3_BUCKET_HOST
      targetPath: objstoreConfig.config.endpoint
    - kind: Secret
      name: *app
      valuesKey: S3_BUCKET_REGION
      targetPath: objstoreConfig.config.region
    - kind: Secret
      name: *app
      valuesKey: S3_ACCESS_KEY
      targetPath: objstoreConfig.config.access_key
    - kind: Secret
      name: *app
      valuesKey: S3_SECRET_KEY
      targetPath: objstoreConfig.config.secret_key
  values:

    image:
      registry: quay.io
      repository: thanos/thanos
      tag: v0.34.1

    objstoreConfig:
      type: s3
      config:
        insecure: false

    receive:
      enabled: false
      networkPolicy:
        enabled: false

    queryFrontend:
      enabled: true
      replicaCount: 2
      config: &config |-
        type: REDIS
        config:
          addr: >-
            redis-node-0.redis-headless.databases.svc.cluster.local:26379,
            redis-node-1.redis-headless.databases.svc.cluster.local:26379,
            redis-node-2.redis-headless.databases.svc.cluster.local:26379
          db: 13
          master_name: redis-master
      ingress:
        enabled: true
        ingressClassName: internal
        hostname: &host thanos-query-frontend.${EXTERNAL_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host
      networkPolicy:
        enabled: false
    query:
      enabled: true
      replicaCount: 2
      replicaLabel: ["__replica__"]
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: observability
      stores: ["thanos.${EXTERNAL_DOMAIN}:10901"]
      networkPolicy:
        enabled: false
    bucketweb:
      enabled: true
      replicaCount: 2
      networkPolicy:
        enabled: false
    compactor:
      enabled: true
      extraFlags:
        - --compact.concurrency=4
        - --delete-delay=30m
      retentionResolutionRaw: 30d
      retentionResolution5m: 60d
      retentionResolution1h: 90d
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
      networkPolicy:
        enabled: false
    storegateway:
      enabled: true
      replicaCount: 2
      config: *config
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
      networkPolicy:
        enabled: false
    ruler:
      enabled: true
      replicaCount: 2
      replicaLabel: __replica__
      alertmanagers:
        - http://alertmanager-operated.observability.svc.cluster.local:9093
      extraFlags: ["--web.prefix-header=X-Forwarded-Prefix"]
      clusterName: cluster # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.externalLabels.cluster`
      config: |-
        groups:
          - name: PrometheusWatcher
            rules:
              - alert: PrometheusDown
                annotations:
                  summary: A Prometheus has disappeared from Prometheus target discovery
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
                for: 5m
                labels:
                  severity: critical
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
      networkPolicy:
        enabled: false
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
