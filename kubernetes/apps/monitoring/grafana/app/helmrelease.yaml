---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana
      version: 6.54.0
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 5
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 5
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:

    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-initdb:14.7
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: grafana-secret
    replicas: 3
    rbac:
      pspEnabled: false
    testFramework:
      enabled: false
    # admin:
    #   existingSecret: grafana-secret
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      auth:
        signout_redirect_url: "https://auth.${EXTERNAL_DOMAIN}/logout"
        oauth_auto_login: false
      auth.generic_oauth:
        enabled: true
        name: Authelia
        client_id: # Set by env vars
        client_secret: # Set by env vars secret
        auth_url: # Set by env vars
        token_url: # Set by env vars
        api_url: # Set by env vars
        scopes: "openid profile email groups"
        empty_scopes: false
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        use_pkce: true
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'
        org_id: 1
      auth.basic:
        enabled: false
        # disable_login_form: false
      auth.anonymous:
        enabled: true
        org_name: HomeOps
        org_id: 1
        org_role: Viewer

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default

    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:9090/
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local:80
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus

    dashboards:
      default:
        zfs:
          gnetId: 7845
          revision: 4
          datasource: Prometheus
        minio:
          gnetId: 13502
          revision: 10
          datasource: Prometheus
        node-exporter-full:
          gnetId: 1860
          revision: 22
          datasource: Prometheus
        persistent-volumes:
          gnedId: 13646
          revision: 2
          datasource: Prometheus
        # blackbox-exporter:
        #   gnedId: 13587
        #   revision: 1
        #   datasource: Prometheus

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        # folderAnnotation: grafana_folder
        # provider:
        #   foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL

    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel

    serviceMonitor:
      enabled: true

    podAnnotations:
      reloader.stakater.com/auto: "true"

    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        ingress.home.arpa/type: "internal"
      hosts:
        - &host "grafana.${EXTERNAL_DOMAIN}"
      tls:
        - hosts:
            - *host

    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["grafana"]
              topologyKey: kubernetes.io/hostname
