---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app frigate
  namespace: home
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  values:

    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: google.feature.node.kubernetes.io/coral
                    operator: In
                    values:
                      - 'true'

    controllers:
      frigate:
        annotations:
          reloader.stakater.com/auto: 'true'

        containers:
          app:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.15.2

            env:
              TZ: ${TZ}
              # LIBVA_DRIVER_NAME: i965
            envFrom:
              - secretRef:
                  name: *app

            resources:
              requests:
                cpu: 10m
                memory: 1000Mi
                gpu.intel.com/i915: "1"
              limits:
                gpu.intel.com/i915: "1"
                memory: 8000Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000

                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            securityContext:
              privileged: true

    service:
      main:
        controller: *app
        ports:
          http:
            port: *port

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.kokoro.wtf"
        parentRefs:
          - name: internal # MAKE EXTERNAL
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
      go2rtc:
        hostnames:
          - "go2rtc.kokoro.wtf"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs: [{}]

    persistence:
      data:
        enabled: true
        existingClaim: *app
      config:
        enabled: true
        type: configMap
        name: frigate
        globalMounts:
          - path: /config/config.yml
            subPath: config.yaml
      media:
        type: nfs
        server: ${NAS_HOST}
        path: /tank/k8s/apps/frigate
        globalMounts:
          - path: /media
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        globalMounts:
          - path: /dev/shm
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        globalMounts:
          - path: /dev/bus/usb
