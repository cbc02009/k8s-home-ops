---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app cloudflared
  namespace: network
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  values:
    defaultPodOptions:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: cloudflared

    controllers:
      cloudflared:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: 'true'

        containers:
          app:
            image:
              repository: ghcr.io/cbc02009/cloudflared
              tag: 2025.8.0

            args:
              - tunnel
              - --config
              - /etc/cloudflared/config/config.yaml
              - run
              - ${CLUSTER_CLOUDFLARE_TUNNEL_ID}

            env:
              TUNNEL_CRED_FILE: /etc/cloudflared/creds/credentials.json
              NO_AUTOUPDATE: true
              TUNNEL_METRICS: 0.0.0.0:8080
              TUNNEL_ORIGIN_ENABLE_HTTP2: true
              TUNNEL_POST_QUANTUM: true
              TUNNEL_TRANSPORT_PROTOCOL: quic

            resources:
              requests:
                cpu: 5m
                memory: 30Mi
              limits:
                memory: 128Mi
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  failureThreshold: 30
                  periodSeconds: 10

    service:
      main:
        controller: *app
        ports:
          http:
            port: 8080

    persistence:
      config:
        enabled: true
        type: configMap
        name: cloudflared-configmap
        globalMounts:
          - path: /etc/cloudflared/config/config.yaml
            subPath: config.yaml
      creds:
        enabled: true
        type: secret
        name: *app

        globalMounts:
          - path: /etc/cloudflared/creds/credentials.json
            subPath: credentials.json
    serviceMonitor:
      cloudflared:
        serviceName: main
        enabled: true
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 30s
