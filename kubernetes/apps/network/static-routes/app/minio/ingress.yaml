---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: &app minio
  namespace: network
  annotations:
    ingress.home.arpa/type: "internal"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-body-size: 5000m
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      chunked_transfer_encoding off;
    # hajimari.io/icon: ""
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  ingressClassName: "nginx"
  rules:
    - host: &host minio.${EXTERNAL_DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: *app
                port:
                  name: console
  tls:
    - hosts:
        - *host
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: &app s3
  namespace: network
  annotations:
    ingress.home.arpa/type: "internal"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-body-size: 5000m
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      chunked_transfer_encoding off;
    # hajimari.io/icon: ""
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  ingressClassName: "nginx"
  rules:
    - host: &host s3.${EXTERNAL_DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: minio
                port:
                  name: s3
  tls:
    - hosts:
        - *host
