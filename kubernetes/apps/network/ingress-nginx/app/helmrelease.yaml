---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: network
spec:
  interval: 15m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.6.1
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:
    controller:
      replicaCount: 3
      extraEnvs:
        - name: TZ
          value: "${TZ}"

      service:
        loadBalancerIP: ${LB_NGINX_INGRESS}
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "ipv4.kokoro.wtf"
          metallb.universe.tf/loadBalancerIPs: |-
            ${LB_NGINX_INGRESS}
        externalTrafficPolicy: Local

      publishService:
        enabled: true

      ingressClassResource:
        default: true

      extraArgs:
        default-ssl-certificate: "network/${EXTERNAL_DOMAIN/./-}-tls"

      config:
        client-header-timeout: 120
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        # custom-http-errors: >-
        #   401,403,404,500,501,502,503
        enable-brotli: "true"
        forwarded-for-header: "CF-Connecting-IP"
        hsts-max-age: "31449600"
        keep-alive: 120
        keep-alive-requests: 10000
        proxy-body-size: "100M"
        ssl-protocols: "TLSv1.3 TLSv1.2"
        use-forwarded-headers: "true"
        # The below X-Clacks-Overehead is a do-nothing header
        # That is simply a memoriam for Sir Terry Pratchett
        # Ref: https://xclacksoverhead.org/home/about
        location-snippet: |
          add_header X-Clacks-Overhead "GNU Terry Pratchett" always;
        log-format-escape-json: "true"
        log-format-upstream: >
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr",
          "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
          "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
          "status": $status, "vhost": "$host", "request_proto": "$server_protocol",
          "path": "$uri", "request_query": "$args", "request_length": $request_length,
          "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent"}

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: network
          namespaceSelector:
            any: true
        prometheusRule:
          enabled: false

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - ingress-nginx
                topologyKey: kubernetes.io/hostname

      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: ingress-nginx

      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists

      podAnnotations:
        configmap.reloader.stakater.com/reload: "cloudflare-proxied-networks"

      resources:
        requests:
          cpu: 23m
          memory: 381M
        limits:
          memory: 1000M

  valuesFrom:
    # Cloudflare Networks
    # https://www.cloudflare.com/ips/
    - targetPath: controller.config.proxy-real-ip-cidr
      kind: ConfigMap
      name: cloudflare-networks
      valuesKey: cloudflare-networks.txt
