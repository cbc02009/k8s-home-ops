---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app nginx-internal
  namespace: network
spec:
  interval: 30m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.8.0
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:

    fullnameOverride: nginx-internal

    controller:
      replicaCount: 2
      updateStrategy:
        type: RollingUpdate
      extraEnvs:
        - name: TZ
          value: "${TZ}"

      service:
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "ingress-int.kokoro.wtf"
          io.cilium/lb-ipam-ips: "10.6.0.2"
        externalTrafficPolicy: Cluster
      ingressClassResource:
        name: internal-nginx
        default: true
        controllerValue: k8s.io/ingress-nginx-internal
      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values: ["internal"]
      allowSnippetAnnotations: true

      extraArgs:
        default-ssl-certificate: "network/kokoro-wtf-tls"

      config:
        client-header-timeout: 120
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        enable-brotli: "true"
        enable-real-ip: "true"
        hsts-max-age: "31449600"
        keep-alive: 120
        keep-alive-requests: 10000
        # The below X-Clacks-Overehead is a do-nothing header
        # That is simply a memoriam for Sir Terry Pratchett
        # Ref: https://xclacksoverhead.org/home/about
        location-snippet: |
          add_header X-Clacks-Overhead "GNU Terry Pratchett" always;
        log-format-escape-json: "true"
        log-format-upstream: >
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr",
          "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
          "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
          "status": $status, "vhost": "$host", "request_proto": "$server_protocol",
          "path": "$uri", "request_query": "$args", "request_length": $request_length,
          "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent"}
        proxy-body-size: 0
        proxy-buffer-size: "16k"
        ssl-protocols: "TLSv1.3 TLSv1.2"

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: network
          namespaceSelector:
            any: true

      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: *app

      resources:
        requests:
          cpu: 100m
          memory: 250Mi
        limits:
          memory: 500Mi
    defaultBackend:
      enabled: false
