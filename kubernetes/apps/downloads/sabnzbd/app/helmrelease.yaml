---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app sabnzbd
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/sabnzbd
      tag: 4.1.0@sha256:d7eabae44168417a6acbc8f6e8510b0187a3f26d648941b3cf61b4c04a904da2

    env:
      TZ: "${TZ}"
      SABNZBD__HOST_WHITELIST_ENTRIES: >-
        sabnzbd, sabnzbd.media, sabnzbd.downloads.svc, sabnzbd.downloads.svc.cluster, sabnzbd.downloads.svc.cluster.local, sabnzbd.${EXTERNAL_DOMAIN}
    envFrom:
      - secretRef:
          name: *app

    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        ingressClassName: "internal-nginx"
        annotations:
          ingress.home.arpa/type: "internal"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
          hajimari.io/icon: mdi:download
        hosts:
          - host: &host "{{ .Release.Name }}.${EXTERNAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100

    podAnnotations:
      setGateway: "true"

    persistence:
      config:
        enabled: true
        existingClaim: sabnzbd-config-v1
      media:
        enabled: true
        type: nfs
        server: nas.ctec.run
        path: /tank/media
        mountPath: /media
      incomplete:
        enabled: true
        type: emptyDir
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 8000Mi

    # -- Affinity constraint rules to place the Pod on a specific node.
    # [[ref]](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/10gb-network
                  operator: In
                  values:
                    - "true"
