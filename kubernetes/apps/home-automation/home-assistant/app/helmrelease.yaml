---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app home-assistant
  namespace: home-automation
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:

    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/home-assistant
      tag: 2023.4.6@sha256:b61019e4929fb904a2621df70785e4cfe923d61bad82167d23f67823df4d1246

    env:
      TZ: "${TZ}"

    envFrom:
      - secretRef:
          name: home-assistant-secret

    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${LB_HASS}
        ports:
          http:
            port: 8123

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
        hosts:
          - host: &host "hass.${EXTERNAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    initContainers:
      wait-for-pg:
        image: quay.io/prometheus/busybox
        imagePullPolicy: IfNotPresent
        command:
          [
            "sh",
            "-c",
            'until nc -vz ${POSTGRES_HOST} 5432; do echo "Waiting for postgres..."; sleep 3; done;',
          ]
      init-db:
        image: ghcr.io/onedr0p/postgres-initdb:14.7
        env:
          - name: POSTGRES_HOST
            value: ${POSTGRES_HOST}
          - name: POSTGRES_DB
            value: home_assistant
        envFrom:
          - secretRef:
              name: home-assistant-secret

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
        - 1010

    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-config-v1

      backup:
        enabled: true
        type: nfs
        server: ${SAN_HOST}
        path: /tank/backup/kubernetes/apps/hass
        mountPath: /config/backups

    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false

    resources:
      requests:
        cpu: 48m
        memory: 443M
      limits:
        memory: 709M
