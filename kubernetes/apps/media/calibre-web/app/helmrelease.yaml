---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app calibre-web
  namespace: media
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:

    defaultPodOptions:
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 1010

    controllers:
      calibre-web-automated:
        type: statefulset
        strategy: RollingUpdate

        containers:
          app:
            image:
              repository: docker.io/crocodilestick/calibre-web-automated
              tag: V3.0.4@sha256:e602e73b6fd50c3ba389b38acb701205976a05b650898f615f93bd7e3537a827

            env:
              TZ: ${TZ}
              PUID: '2000' # "${APP_UID}"
              PGID: '2000' # "${APP_GID}"
              CACHE_DIR: /cache
              CALIBRE_PORT: &port 8083
              DOCKER_MODS: >-
                {{- $items := list
                  "// renovate: lsio-docker-mod"
                  "ghcr.io/linuxserver/mods:universal-calibre-v7.16.0"
                -}}
                {{- $filtered := list -}}
                {{- range $item := $items -}}
                  {{- if not (hasPrefix "//" $item) -}}
                    {{- $filtered = append $filtered $item -}}
                  {{- end -}}
                {{- end -}}
                {{- $filtered | join "|" -}}

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  initialDelaySeconds: 60
                  failureThreshold: 45
                  periodSeconds: 5

            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 768Mi

    service:
      main:
        controller: *app
        ports:
          http:
            port: 8083

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.kokoro.wtf"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        enabled: true
        existingClaim: *app
      ingest:
        enabled: true
        type: nfs
        server: &nas ${NAS_HOST}
        path: /tank/media/
        globalMounts:
          - path: /calibre-library
            subPath: calibre
          - path: /cwa-book-ingest
            subPath: cwa-ingest
      cache:
        type: emptyDir
        globalMounts:
          - path: /cache
