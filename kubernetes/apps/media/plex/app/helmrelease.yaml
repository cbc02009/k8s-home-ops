---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    defaultPodOptions:
      runtimeClassName: nvidia
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 44
          - 109
          - 100
          - 1010

    controllers:
      main:
        type: statefulset

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/plex-beta
              tag:
                1.32.7.7571-13cdc68dc@sha256:59d99221e5560d57ecb1e8550c330bb7dd5ccb77cd0ecab3832125a6608b3207

            env:
              TZ: ${TZ}
              # NVIDIA_VISIBLE_DEVICES: all
              # NVIDIA_DRIVER_CAPABILITIES: all

            resources:
              requests:
                cpu: 100m
                memory: 2000M
                nvidia.com/gpu: 1
              limits:
                nvidia.com/gpu: 1
                memory: 10000M
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${LB_PLEX}
        ports:
          http:
            port: 32400

    ingress:
      main:
        enabled: true
        annotations:
          ingress.home.arpa/type: external
          hajimari.io/enable: 'true'
          hajimari.io/icon: plex
          hajimari.io/appName: plex
          hajimari.io/url: https://plex.${EXTERNAL_DOMAIN}/web/
          nginx.ingress.kubernetes.io/backend-protocol: HTTPS
          nginx.ingress.kubernetes.io/configuration-snippet: |
            location = / {
              if ($http_x_plex_device = ""){
                return 301 $scheme://$host/web/index.html;
              }
            }
        hosts:
          - host: &host '{{ .Release.Name }}.${EXTERNAL_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: tls.plex

        className: external-nginx
    persistence:
      config:
        enabled: true
        existingClaim: plex-config-v1

      transcode:
        enabled: true
        type: emptyDir

      media:
        enabled: true
        type: nfs
        server: &nas nas.ctec.run
        path: /tank/media
        globalMounts:
          - path: /media
      backup:
        enabled: true
        type: nfs
        server: *nas
        path: /tank/backup/kubernetes/apps/plex
        globalMounts:
          - path: /config/backup
