---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app libreddit
  namespace: services
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    defaultPodOptions:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          main:
            image:
              repository: ghcr.io/auricom/libreddit
              tag: 0.30.1@sha256:4106b2aa4d9ce76f16ea9db1aa75ace2e9c80c067f698dad2f92c68c7cd94c30
            env:
              LIBREDDIT_DEFAULT_SHOW_NSFW: on
              LIBREDDIT_DEFAULT_WIDE: on
              LIBREDDIT_DEFAULT_USE_HLS: on
              LIBREDDIT_DEFAULT_HIDE_HLS_NOTIFICATION: on
            resources:
              requests:
                cpu: 5m
                memory: 50Mi
              limits:
                memory: 250Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /settings
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        annotations:
          ingress.home.arpa/type: external-auth
          hajimari.io/icon: simple-icons:reddit
        hosts:
          - host: &host '{{ .Release.Name }}.${EXTERNAL_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
        className: external-nginx
    fullNameOverride: *app
    podAnnotations:
      reloader.stakater.com/auto: 'true'
      setGateway: 'true'
