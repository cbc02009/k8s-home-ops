---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app lidarr
  namespace: organizarrs
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:

    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/lidarr-develop
      tag: 1.2.2.3242@sha256:553300608b18d8a8fcaa61ab20e18e45aa6c94fb20666cbbedc354f73ff71a18

    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:14.8
        envFrom:
          - secretRef:
              name: lidarr-secret

    env:
      TZ: "${TZ}"
      LIDARR__INSTANCE_NAME: Lidarr
      LIDARR__PORT: &port 8686
      LIDARR__LOG_LEVEL: info
      LIDARR__POSTGRES_MAIN_DB: lidarr_main
      LIDARR__POSTGRES_LOG_DB: lidarr_log
      LIDARR__POSTGRES_HOST: ${POSTGRES_HOST}

    envFrom:
      - secretRef:
          name: lidarr-secret

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          ingress.home.arpa/type: "internal"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${EXTERNAL_DOMAIN}/css/base/lidarr/dracula.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "{{ .Release.Name }}.${EXTERNAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100

    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config-v1

      media:
        enabled: true
        type: nfs
        server: &nas "nas.ctec.run"
        path: /tank/media
        mountPath: /media

      backup:
        enabled: true
        type: nfs
        server: *nas
        path: /tank/backup/kubernetes/apps/radarr
        mountPath: /config/Backups

    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
