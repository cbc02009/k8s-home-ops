---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: organizarrs
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5

  values:

    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-initdb:14.8
        envFrom:
          - secretRef:
              name: radarr-secret

    image:
      repository: ghcr.io/onedr0p/radarr-develop
      tag: 4.5.0.7106

    env:
      TZ: ${TZ}
      RADARR__INSTANCE_NAME: Radarr
      PUSHOVER_APP_URL: &host "{{ .Release.Name }}.${EXTERNAL_DOMAIN}"
      RADARR__PORT: &port 7878
      RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${EXTERNAL_DOMAIN}"
      RADARR__LOG_LEVEL: info
      RADARR__POSTGRES_MAIN_DB: radarr_main
      RADARR__POSTGRES_LOG_DB: radarr_log
      RADARR__POSTGRES_HOST: ${POSTGRES_HOST}

    envFrom:
      - secretRef:
          name: radarr-secret

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          ingress.home.arpa/type: "internal"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${EXTERNAL_DOMAIN}/css/base/radarr/organizr.css"></head>';
            sub_filter_once on;
          hajimari.io/enable: "true"
          hajimari.io/icon: "filmstrip"
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: &tls tls.radarr

    persistence:
      config:
        enabled: true
        existingClaim: radarr-config-v1

      media:
        enabled: true
        type: nfs
        server: "nas.ctec.run"
        path: /tank/media
        mountPath: /media

      backup:
        enabled: true
        type: nfs
        server: nas.ctec.run
        path: /tank/backup/kubernetes/apps/radarr
        mountPath: /config/Backups

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100

    # podAnnotations:
    #   setGateway: "true"

    resources:
      requests:
        cpu: 15m
        memory: 380M
      limits:
        cpu: 100m
        memory: 670M
