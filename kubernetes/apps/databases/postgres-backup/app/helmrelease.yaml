---
# yaml-language-server: $schema=https://kubernetes-schemas.kokoro.wtf/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: postgres-backup
  namespace: databases
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: cronjob
      cronjob:
        schedule: "@daily"
        ttlSecondsAfterFinished: 43200
    restartPolicy: OnFailure
    image:
      repository: docker.io/prodrigestivill/postgres-backup-local
      tag: 15@sha256:b3905c58ab8c1fb7596e2f90f059c65d61c2a813232e6eca4a3f5ce019bfbd61
      pullPolicy: IfNotPresent
    command: ["/backup.sh"]
    env:
      - name: POSTGRES_HOST
        value: ${POSTGRES_HOST}
      - name: POSTGRES_USER
        valueFrom:
          secretKeyRef:
            name: postgres-backup-secret
            key: username
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: postgres-backup-secret
            key: password
      - name: POSTGRES_CLUSTER
        value: "true"
      - name: POSTGRES_DB
        value: "authelia, gitea, grafana, home_assistant, immich, lidarr_main, nextcloud, postgres, prowlarr_main, radarr_main, vaultwarden"
      - name: BACKUP_KEEP_DAYS
        value: "7"
      - name: BACKUP_KEEP_WEEKS
        value: "4"
      - name: BACKUP_KEEP_MONTHS
        value: "6"
      - name: BACKUP_KEEP_MINS
        value: "7200"
      - name: POSTGRES_EXTRA_OPTS
        value: "--clean"
    enableServiceLinks: false
    service:
      main:
        enabled: false
    persistence:
      backup:
        enabled: true
        type: nfs
        server: "nas.ctec.run"
        path: /tank/backup/kubernetes/apps/postgres
        mountPath: /backups

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
