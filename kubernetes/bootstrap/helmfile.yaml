---
# yaml-language-server: $schema=https://json.schemastore.org/helmfile

helmDefaults:
  wait: true
  waitForJobs: true
  timeout: 600
  recreatePods: true
  force: true

repositories:
  - name: cilium
    url: https://helm.cilium.io

releases:
  - name: prometheus-operator-crds
    atomic: true
    namespace: observability
    chart: oci://ghcr.io/prometheus-community/charts/prometheus-operator-crds
    version: 21.0.0

  - name: cilium
    namespace: kube-system
    atomic: true
    chart: cilium/cilium
    version: 1.17.6
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/kube-system/cilium/app/values.yaml'
    needs:
      - observability/prometheus-operator-crds
    hooks:
      - # Wait for cilium CRDs to be available
        events: ['postsync']
        command: bash
        args:
          - -c
          - until kubectl get crd ciliumbgppeeringpolicies.cilium.io ciliumloadbalancerippools.cilium.io &>/dev/null; do sleep 10; done
        showlogs: true
      - # Apply cilium network configuration
        events:
          - postsync
        command: kubectl
        args:
          - apply
          - --namespace=kube-system
          - --server-side
          - --field-manager=kustomize-controller
          - --kustomize={{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/kube-system/cilium/config/
        showlogs: true

  - name: coredns
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/coredns/charts/coredns
    version: 1.43.0
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/kube-system/coredns/app/values.yaml'
    needs:
      - kube-system/cilium
  
  # - name: spegel
  #   namespace: kube-system
  #   chart: oci://ghcr.io/spegel-org/helm-charts/spegel
  #   version: 0.3.0
  #   values: 
  #     - '../kubernetes/apps/kube-system/spegel/app/helm/values.yaml'
  #   needs: 
  #     - 'kube-system/coredns'

  - name: cert-manager
    namespace: cert-manager
    atomic: true
    chart: oci://quay.io/jetstack/charts/cert-manager
    version: v1.18.2
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/cert-manager/cert-manager/app/values.yaml'
    needs:
      - kube-system/coredns

  # - name: external-secrets
  #   namespace: external-secrets
  #   chart: oci://ghcr.io/external-secrets/charts/external-secrets
  #   version: 0.17.0
  #   values: 
  #     - '../kubernetes/apps/external-secrets/external-secrets/app/helm/values.yaml'
  #   hooks:
  #     - # Apply cluster secret store
  #       events: ['postsync']
  #       command: kubectl
  #       args:
  #         - apply
  #         - --namespace=external-secrets
  #         - --server-side
  #         - --field-manager=kustomize-controller
  #         - --filename
  #         - ../kubernetes/apps/external-secrets/external-secrets/app/clustersecretstore.yaml
  #         - --wait=true
  #       showlogs: true
  #   needs: 
  #     - 'cert-manager/cert-manager'

  - name: wipe-rook
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/bjw-s-labs/helm/app-template
    version: 4.1.2
    values:
      - ./templates/wipe-rook.yaml.gotmpl
    needs:
      - kube-system/coredns

  - name: flux-operator
    namespace: flux-system
    atomic: true
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-operator
    version: 0.25.0
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/flux-system/flux-operator/app/values.yaml'
    needs:
      - kube-system/wipe-rook

  - name: flux-instance
    namespace: flux-system
    atomic: true
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-instance
    version: 0.25.0
    wait: false
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/flux-system/flux-operator/instance/values.yaml'
    needs:
      - flux-system/flux-operator
