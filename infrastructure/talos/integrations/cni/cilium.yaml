# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: kokoro
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.11.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: kokoro\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUk0RVM2eW1qQXdhOUk5SklwQkdaZXd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU1URTFNVFF3TlZvWERUSTJNRFV5TURFMQpNVFF3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwRFpRWnAwdkl0V2FWRDRleWdFVEhSaFBHaUpTRUZLeGFnYjk3WVJHSGxnWExXVzUKMk1NUGhhTlRDOUhLOVNoYXJjSkF1WldhYTc2TmU3U1BGN1hBOXZES1pweitIbHEzeEJQakNUckZOcXBkY0JWawpzblI0c29SRmlzYWl0OXh3NzlKV1hPNTNhUytXdk5QSlk1SnVkV095U0owZnE4YkRlazZnNTNZcjZ1eEZuRWxLCkR3amx0NzZTK2tSRlMyZXdxcXJqRHYrT0FvSklLbHF3ZE5PMHlEVjQ3bGo1alIvdlYrSitBcXMzbVRiZnI3YWUKZ2FIaTR1YnRzL254ZEwrVzgyVEgycmRFRGZiZ2FmZ3JMbmxic0NycHFRbWJEWUNYVU5icFNzTlZEQ1M4MXo1TwpjUi9jaDMvdDkrUTlRWnQ4OHJvazlJWjZlRlYrUjZveHJhQVRCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSDI5NGxJMTFyREpJNjZ0YWZOemtianFJcm8yTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3FFRTgvZ0FqS2VQOFJmZHorZDE1MEg4UTNiZWVwZitTU1JUSWpxWmZCM3E2RWRxRS9QUmptCnJ6cGR3WThYNisySEhYMUp6WGJsYzl6NjJFSWpYdzc3YUVYMkJKNlMzV3NIenpzZ3NkTUc0L3o4QU82RWtpM1QKbmdXUEx4TmNsNEJKR3VlbWFGaVk2UkwxdG9XUGRqU2RYL3ZJM1VPVCsrVDhwSTRtbkhZTXBxUE5vSFRBa2tUMQoxeHBlZkpkd0FkNlBwTUJSTm1nKzQ2V3lmU2c0SmM1cjlHZDJFZ1lCbTZGM3JUWExPSjI5SFVVcEExSTFQWDgrCkJrNE1nVG84clFEZTdlWDR2UEhqOThMM1lQVHRXRVhTcHZxcnczemp0dGZNand4R2lzc2g3T3dIUi93blJURngKM1A2c0JGcWNsRXJETlJYK3greURscVN6MU5FU0R3UGUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMERaUVpwMHZJdFdhVkQ0ZXlnRVRIUmhQR2lKU0VGS3hhZ2I5N1lSR0hsZ1hMV1c1CjJNTVBoYU5UQzlISzlTaGFyY0pBdVpXYWE3Nk5lN1NQRjdYQTl2REtacHorSGxxM3hCUGpDVHJGTnFwZGNCVmsKc25SNHNvUkZpc2FpdDl4dzc5SldYTzUzYVMrV3ZOUEpZNUp1ZFdPeVNKMGZxOGJEZWs2ZzUzWXI2dXhGbkVsSwpEd2psdDc2UytrUkZTMmV3cXFyakR2K09Bb0pJS2xxd2ROTzB5RFY0N2xqNWpSL3ZWK0orQXFzM21UYmZyN2FlCmdhSGk0dWJ0cy9ueGRMK1c4MlRIMnJkRURmYmdhZmdyTG5sYnNDcnBxUW1iRFlDWFVOYnBTc05WRENTODF6NU8KY1IvY2gzL3Q5K1E5UVp0ODhyb2s5SVo2ZUZWK1I2b3hyYUFUQndJREFRQUJBb0lCQUV1bmdKMVlmZGtWYmljdwpEelh0SUFuUlhHU3RsYzN5amg1dGZmVEF2RTJvU251blc5a0VQMjZhZ3NGbnNHeFdCbVRla1hBZGlPZWZiSDlICmd6cmxRc0UzaXdPd0JiSDMyby8zZmVaTG9YOFVkakVVeE9zRzRSaFVjWVJVV3FtZUFyZFJZU29SUi9oRFgyMHIKTXlEb0F4VEtiZXh1a3lSeWEzTFVnU2k1U29ub09kY0ZhMCsyVEdsOXQ0bXpBbGYzaTVSS1RkTWY4c01RcTBaeApSU3kzWGk0RUIxcDRUOXZ5ZFFPQUNieVNPYi9lMzJTcWRqUElXWG9ab0ZJZDhRRndVMW5WU3NOYXU3d2lmbHZGClExaG93dHRFZ1BicFR3bGdLbFE0Ulc5SUtIYjBya05kWUJoSnBVVFNtY0c5M2JNeUNHL0lJNXZFNmZidTlCK00KSVFNUTd3RUNnWUVBMStnVWY2WDN3enFPdUx2S0hVdnhDTFA3amJ4TG1UV3dSVjdTZ3FDZ0tzRlI5cm9nd0tOSQpsV3gySEJOS3VSVkxsSXJ1Ky9UM1hoN3lMc3RuNXdGdXNldktzRkZPUExkZXN4NEdITmFwTDh2Wk94RW4xYUhsCmZzWHhnRzQ1dHJzVmx6aFhnN0NycU5UbkQ4bG5BUGhyZTRJTTAyRHVTY1ZBSVp3SFRKekU4SUVDZ1lFQTl1QnoKdzF0U1FtNUpFcDFseUtHUFI0dDJHNFl0cjBGaDlKMHhGVWtyd2NrSFN2YUJSMWsyVjZ4Wm5CbGVWelh3aHJIOQpBR01wMnN2YlF6L0E3dEZZc09OdU9VbEIwaVdFS2tNZm5YZU8zQmRUZEExLzIxZ0c4b1pmM3hsNXN5T1ZVaHNDCkpadDI1N0trUEZIR3N2M1JzakNoYWVxZjFpNjhXOHRXTEhmVnY0Y0NnWUVBdytFNGg3N0psQVBTYkdOak1VVXUKdnRpYmhyR29YSzNLNklUb3M3NkswWDltbjFPcVYxdE1oTlJNSzVpTkdISHJpaTZxTjBpK0RGUkRJSlZHQk56Vgowdkc3aUUrYmpaWkhnblhnMGRVbTFjZzVvMDhqTnJ5VSsza1dhNUNWSitWLzV4d2t1Y05WV2UwZVhNSTZnelRlClBzVjBZV24xaGxSQXBMMXNHZU81QVFFQ2dZRUF1WWNXR0RMeHo3Q1h3NkI3bEZvdGxlT3RuNk9uZzNSTVRBc3gKanNDTlhMVlpnTEZkbUNQb0hkME0vcTFsNDM1S3dyN1Ixayt2YlprVHJ5Y2pNNVlwNDgwVzBZQkhNY2sxMkpqWApFbng5NU5LMnlaazNnN3hVaEVBTm5sakR4NmN2R1NQbzZpQTZMSWRvdTFmdFRpaEhSWFVjYUwrRTNPNEVhYXVXCm1CWjZrTk1DZ1lFQWxNSDhmcGZ4cXhsNjJ0TG9pak5iM2dGb2ZFQU45ZHZNZDFFR1hpOGFqTTVvVEgrT2JBZzEKUEhMQm5NN0cxTVRmWG1xc3NQa2ZQaGxvazBHc2Y2QndPS20ySDhyRWZMcW10VHRlQVV4VWhJZ3N1SkVwRklJNwp5Qm81UnBROG9JQ2MrRjlMK3IxNFFkaTljSHh4R2IvcEdienJhVFZwajQ0YTB6UktNRGROWFprPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUk0RVM2eW1qQXdhOUk5SklwQkdaZXd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU1URTFNVFF3TlZvWERUSTJNRFV5TURFMQpNVFF3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwRFpRWnAwdkl0V2FWRDRleWdFVEhSaFBHaUpTRUZLeGFnYjk3WVJHSGxnWExXVzUKMk1NUGhhTlRDOUhLOVNoYXJjSkF1WldhYTc2TmU3U1BGN1hBOXZES1pweitIbHEzeEJQakNUckZOcXBkY0JWawpzblI0c29SRmlzYWl0OXh3NzlKV1hPNTNhUytXdk5QSlk1SnVkV095U0owZnE4YkRlazZnNTNZcjZ1eEZuRWxLCkR3amx0NzZTK2tSRlMyZXdxcXJqRHYrT0FvSklLbHF3ZE5PMHlEVjQ3bGo1alIvdlYrSitBcXMzbVRiZnI3YWUKZ2FIaTR1YnRzL254ZEwrVzgyVEgycmRFRGZiZ2FmZ3JMbmxic0NycHFRbWJEWUNYVU5icFNzTlZEQ1M4MXo1TwpjUi9jaDMvdDkrUTlRWnQ4OHJvazlJWjZlRlYrUjZveHJhQVRCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSDI5NGxJMTFyREpJNjZ0YWZOemtianFJcm8yTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3FFRTgvZ0FqS2VQOFJmZHorZDE1MEg4UTNiZWVwZitTU1JUSWpxWmZCM3E2RWRxRS9QUmptCnJ6cGR3WThYNisySEhYMUp6WGJsYzl6NjJFSWpYdzc3YUVYMkJKNlMzV3NIenpzZ3NkTUc0L3o4QU82RWtpM1QKbmdXUEx4TmNsNEJKR3VlbWFGaVk2UkwxdG9XUGRqU2RYL3ZJM1VPVCsrVDhwSTRtbkhZTXBxUE5vSFRBa2tUMQoxeHBlZkpkd0FkNlBwTUJSTm1nKzQ2V3lmU2c0SmM1cjlHZDJFZ1lCbTZGM3JUWExPSjI5SFVVcEExSTFQWDgrCkJrNE1nVG84clFEZTdlWDR2UEhqOThMM1lQVHRXRVhTcHZxcnczemp0dGZNand4R2lzc2g3T3dIUi93blJURngKM1A2c0JGcWNsRXJETlJYK3greURscVN6MU5FU0R3UGUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMERaUVpwMHZJdFdhVkQ0ZXlnRVRIUmhQR2lKU0VGS3hhZ2I5N1lSR0hsZ1hMV1c1CjJNTVBoYU5UQzlISzlTaGFyY0pBdVpXYWE3Nk5lN1NQRjdYQTl2REtacHorSGxxM3hCUGpDVHJGTnFwZGNCVmsKc25SNHNvUkZpc2FpdDl4dzc5SldYTzUzYVMrV3ZOUEpZNUp1ZFdPeVNKMGZxOGJEZWs2ZzUzWXI2dXhGbkVsSwpEd2psdDc2UytrUkZTMmV3cXFyakR2K09Bb0pJS2xxd2ROTzB5RFY0N2xqNWpSL3ZWK0orQXFzM21UYmZyN2FlCmdhSGk0dWJ0cy9ueGRMK1c4MlRIMnJkRURmYmdhZmdyTG5sYnNDcnBxUW1iRFlDWFVOYnBTc05WRENTODF6NU8KY1IvY2gzL3Q5K1E5UVp0ODhyb2s5SVo2ZUZWK1I2b3hyYUFUQndJREFRQUJBb0lCQUV1bmdKMVlmZGtWYmljdwpEelh0SUFuUlhHU3RsYzN5amg1dGZmVEF2RTJvU251blc5a0VQMjZhZ3NGbnNHeFdCbVRla1hBZGlPZWZiSDlICmd6cmxRc0UzaXdPd0JiSDMyby8zZmVaTG9YOFVkakVVeE9zRzRSaFVjWVJVV3FtZUFyZFJZU29SUi9oRFgyMHIKTXlEb0F4VEtiZXh1a3lSeWEzTFVnU2k1U29ub09kY0ZhMCsyVEdsOXQ0bXpBbGYzaTVSS1RkTWY4c01RcTBaeApSU3kzWGk0RUIxcDRUOXZ5ZFFPQUNieVNPYi9lMzJTcWRqUElXWG9ab0ZJZDhRRndVMW5WU3NOYXU3d2lmbHZGClExaG93dHRFZ1BicFR3bGdLbFE0Ulc5SUtIYjBya05kWUJoSnBVVFNtY0c5M2JNeUNHL0lJNXZFNmZidTlCK00KSVFNUTd3RUNnWUVBMStnVWY2WDN3enFPdUx2S0hVdnhDTFA3amJ4TG1UV3dSVjdTZ3FDZ0tzRlI5cm9nd0tOSQpsV3gySEJOS3VSVkxsSXJ1Ky9UM1hoN3lMc3RuNXdGdXNldktzRkZPUExkZXN4NEdITmFwTDh2Wk94RW4xYUhsCmZzWHhnRzQ1dHJzVmx6aFhnN0NycU5UbkQ4bG5BUGhyZTRJTTAyRHVTY1ZBSVp3SFRKekU4SUVDZ1lFQTl1QnoKdzF0U1FtNUpFcDFseUtHUFI0dDJHNFl0cjBGaDlKMHhGVWtyd2NrSFN2YUJSMWsyVjZ4Wm5CbGVWelh3aHJIOQpBR01wMnN2YlF6L0E3dEZZc09OdU9VbEIwaVdFS2tNZm5YZU8zQmRUZEExLzIxZ0c4b1pmM3hsNXN5T1ZVaHNDCkpadDI1N0trUEZIR3N2M1JzakNoYWVxZjFpNjhXOHRXTEhmVnY0Y0NnWUVBdytFNGg3N0psQVBTYkdOak1VVXUKdnRpYmhyR29YSzNLNklUb3M3NkswWDltbjFPcVYxdE1oTlJNSzVpTkdISHJpaTZxTjBpK0RGUkRJSlZHQk56Vgowdkc3aUUrYmpaWkhnblhnMGRVbTFjZzVvMDhqTnJ5VSsza1dhNUNWSitWLzV4d2t1Y05WV2UwZVhNSTZnelRlClBzVjBZV24xaGxSQXBMMXNHZU81QVFFQ2dZRUF1WWNXR0RMeHo3Q1h3NkI3bEZvdGxlT3RuNk9uZzNSTVRBc3gKanNDTlhMVlpnTEZkbUNQb0hkME0vcTFsNDM1S3dyN1Ixayt2YlprVHJ5Y2pNNVlwNDgwVzBZQkhNY2sxMkpqWApFbng5NU5LMnlaazNnN3hVaEVBTm5sakR4NmN2R1NQbzZpQTZMSWRvdTFmdFRpaEhSWFVjYUwrRTNPNEVhYXVXCm1CWjZrTk1DZ1lFQWxNSDhmcGZ4cXhsNjJ0TG9pak5iM2dGb2ZFQU45ZHZNZDFFR1hpOGFqTTVvVEgrT2JBZzEKUEhMQm5NN0cxTVRmWG1xc3NQa2ZQaGxvazBHc2Y2QndPS20ySDhyRWZMcW10VHRlQVV4VWhJZ3N1SkVwRklJNwp5Qm81UnBROG9JQ2MrRjlMK3IxNFFkaTljSHh4R2IvcEdienJhVFZwajQ0YTB6UktNRGROWFprPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUk0RVM2eW1qQXdhOUk5SklwQkdaZXd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU1URTFNVFF3TlZvWERUSTJNRFV5TURFMQpNVFF3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwRFpRWnAwdkl0V2FWRDRleWdFVEhSaFBHaUpTRUZLeGFnYjk3WVJHSGxnWExXVzUKMk1NUGhhTlRDOUhLOVNoYXJjSkF1WldhYTc2TmU3U1BGN1hBOXZES1pweitIbHEzeEJQakNUckZOcXBkY0JWawpzblI0c29SRmlzYWl0OXh3NzlKV1hPNTNhUytXdk5QSlk1SnVkV095U0owZnE4YkRlazZnNTNZcjZ1eEZuRWxLCkR3amx0NzZTK2tSRlMyZXdxcXJqRHYrT0FvSklLbHF3ZE5PMHlEVjQ3bGo1alIvdlYrSitBcXMzbVRiZnI3YWUKZ2FIaTR1YnRzL254ZEwrVzgyVEgycmRFRGZiZ2FmZ3JMbmxic0NycHFRbWJEWUNYVU5icFNzTlZEQ1M4MXo1TwpjUi9jaDMvdDkrUTlRWnQ4OHJvazlJWjZlRlYrUjZveHJhQVRCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSDI5NGxJMTFyREpJNjZ0YWZOemtianFJcm8yTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3FFRTgvZ0FqS2VQOFJmZHorZDE1MEg4UTNiZWVwZitTU1JUSWpxWmZCM3E2RWRxRS9QUmptCnJ6cGR3WThYNisySEhYMUp6WGJsYzl6NjJFSWpYdzc3YUVYMkJKNlMzV3NIenpzZ3NkTUc0L3o4QU82RWtpM1QKbmdXUEx4TmNsNEJKR3VlbWFGaVk2UkwxdG9XUGRqU2RYL3ZJM1VPVCsrVDhwSTRtbkhZTXBxUE5vSFRBa2tUMQoxeHBlZkpkd0FkNlBwTUJSTm1nKzQ2V3lmU2c0SmM1cjlHZDJFZ1lCbTZGM3JUWExPSjI5SFVVcEExSTFQWDgrCkJrNE1nVG84clFEZTdlWDR2UEhqOThMM1lQVHRXRVhTcHZxcnczemp0dGZNand4R2lzc2g3T3dIUi93blJURngKM1A2c0JGcWNsRXJETlJYK3greURscVN6MU5FU0R3UGUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9PWWV6MW10Q3N5a2pPckNkSng2NjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU1URTFNVFF3TlZvWERUSTJNRFV5TURFMQpNVFF3TlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXYxZ2dzcHpWalVKMU5ySHRJNm1jMnN3eHhPaysKa0ZjY0YxSGoxRndhMnA1RHNCRUZSbnRmMy9kY1FRbEpWNmk3bm93SkJWZ3RzQU41elg2NzRlbEs5Nk1YeE9oOApHR0hxS1gwR1hIQUp6Vk8vYjBkcmF3akk2VnIvMVY0TDEzSnNjeDJ4LzNnNzNKSE5WcUlGUXRiRkw5Nlh5NWk5CjM2Q1RGellmWG5Wak5nekNaMndkMklkUi9FQTZwdFgyNC9QbHJvVVlYSjFiYlJBbDlYTFNNUlJ1aDZPV0ZCMVUKWXY0YmRrRHNubWVTYzlaenljM2pyWTZiaG9OTkUxVlBubFpIdGJHUU5RTXZMMlg0Y2krcHArUm9SNHNEYjVBbwowZjBqSTVWQTdJNnVubVpnQ21tNm53NlMzOXA2UUtJenordnE4dGFyRWNPWndkaFp4VHcrYmlORk93SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUjl2ZUpTTmRhd3lTT3VyV256YzVHNAo2aUs2TmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRHQ1TXp4eWVFdjU1RmdGVEd3RjROSW1lZ0dhSTRNMzQ4MnpEZTlVT1RIUEJ0aTAKcmw0N01iL3RPTEI3c3ZuQTRTQkRQdlZFRWk0YmRoYk8ySWsvZHhIL1l3anVpSnNRV2FLTXNGUFZCUGp0d2JLTgpkTVo4R2lYcFJGNzJRK2xyeWl1SS95N2RwRmVLaHJmL1UxZ05xQ1h4RndaVE95QUE2Q2ZiamJkY3BMcjYwdCtOClEzTU1CYzQ4MWVRTEhjdTlmbkk2NmorTytCcm1hQVVaajRtcHE1ODRyU0VKaUpVMnZZcDZ0cDcwaHE4UlNNb2kKNWRCWkVFOEV2RjZSWUJ0bXJsb3FKL3Z1K3F0LzMwSC84dzRPU2VtNU9RTVhzSnR4Mk1qMGlIdjlxQ3p4MERZRgp0VnNpelpDWjRtdDJreFRRSE5MUWhhUCtYMUR2YWRXSEYzQ3g4VWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdjFnZ3NwelZqVUoxTnJIdEk2bWMyc3d4eE9rK2tGY2NGMUhqMUZ3YTJwNURzQkVGClJudGYzL2RjUVFsSlY2aTdub3dKQlZndHNBTjV6WDY3NGVsSzk2TVh4T2g4R0dIcUtYMEdYSEFKelZPL2IwZHIKYXdqSTZWci8xVjRMMTNKc2N4MngvM2c3M0pITlZxSUZRdGJGTDk2WHk1aTkzNkNURnpZZlhuVmpOZ3pDWjJ3ZAoySWRSL0VBNnB0WDI0L1Bscm9VWVhKMWJiUkFsOVhMU01SUnVoNk9XRkIxVVl2NGJka0Rzbm1lU2M5Wnp5YzNqCnJZNmJob05ORTFWUG5sWkh0YkdRTlFNdkwyWDRjaStwcCtSb1I0c0RiNUFvMGYwakk1VkE3STZ1bm1aZ0NtbTYKbnc2UzM5cDZRS0l6eit2cTh0YXJFY09ad2RoWnhUdytiaU5GT3dJREFRQUJBb0lCQUNsSlhiek1oSE8zZkUweAo5U1kxeWVlWUdjRVFSdlNrSnlhTS8ranBlczNqU2wycVBvWW54dGN2cTVOSTZxOWtkQjlRdmYyT09rVjVhb1hCCnE4NmlKUS9yL0F2NzBoTDh4YWJ3R0RoSDRJV1NaWU1nV1BnK2JBT1dKQStvL0VzZm9IRHlYbDd1VlpSUlRZbzgKNlgremtkYXpZL09GWUtycEhmUHJOTGVRQXJrOWhiMXdtc2ZOczVWM2JTZHNLdENFdkI2d0NPcjV4bEZzeGhBaApTbHRrOXY1Vjk0a3N5cThqNDRPenYyWFk0M3RzVXcvUlVYaUh0QklKV2xMd2Q5WnpNdnJTQ3llY1h5OVAwa3Z4CmhKS2ozT3F2N2kxd2lSb28xYWwycjdQZzc2RGZ2dFhtRXJpNkJjbVlPd3NPVHhvcGZ1bkRlODlyTGw4Q0Q2UmEKNGxNdExKa0NnWUVBekJPdHRzWnpKWVlwVVdVTHM0RlQzUmUvbVNvSDZtM2l5amtBQjhuN0RlcUZBVWdjTHJnegphNnIxdmpDQi9hbHRON0JiNHFTc1BkQVFDYVllZVBmekFINHFVMEtFYzhEL2hFOGJXbms1dzFGVDFYbVZiUG5QCjhMdkNvSGlNNWxlS2tiS2FuNjhwTlV4M2xMbGI3WlNuTCtkRnpXMmFPZkJ0T1Z2ZE5odGFPdjhDZ1lFQThBY2YKdlpST1MvQ21OTkxCbG1CNm50SkJvNUV0OVFWcjB3Vm1EaDEzZ2d1V1NIMFJXaXNQM2JHUVk0aXFvWEIxZHNCMQoxalJ3Rml3OXg0b3psWHF2Z1Bkak5uajFIU2k0WEVmdzhhenBaaFFwUy9PVHJmSlJxUXk5QWlENUordWcvazRwClc0UDMyNTVTQitJcVRUOUNMVHlWS2Z3cGp5TUo3NVJJNm56bkljVUNnWUVBalhmcXlUUmlxQldMMk8vYUg3SzgKWnh6S1ppdmIxdWdiK2lGdll2YmlnWEFjaVpucVozeXJzS3lQdENzK1FaRE10SGtlQ1V3c1ZxRkFMT0FxYWFOQQpvZ3ZUM1duVUZjWXBteGVYbDYxSG5KMXBKeWdrckttME8yWjljZTUvaGtJVFBoTDQyMDk2bW9jS3NsK1lXV2JlClN2Zmd6SnA0K2tjd0FENHRhQStvQ2hNQ2dZQkRaS3lyelJWQ3l6blBnUkZyeUlFRlVPR3ZMRmNzQWE2cG5FMXcKVHlPNzlzYm1hWDlTd3Q1OGo1dUw1dGFKNTRxRG9qd3p2WnR2RGxMMlVMNTFEUEowRW9IZnpJeDkrRzN6TXh2YQpyNE1FNzBvOUVoSDMrQjZuaVhVVVFPL1VIcHVnYTQrL0swbVBkMTl1NlRpWllkYVIzdjIrd1JkbUloOXJEa1orCjJEMEpSUUtCZ1FDNE5kR29ZSnh5YStId0g5R0FOcTdtUjhVTm5uSmdxNmE1clM4QzJLS2ZNcm1uS2Y1aDJidFkKUUxFbHM5OHBmTXRaRUtJemN3VUNiSjVEdEcwbzh5cmkvYkZsOHFaVDBkcU45OC9Ody9KQkVLSXk0K2pQbHlNTApScWJlZCtCTDV4bWxPc3IrWVl3dytCQmtzZ1ZMRFBURXNTNTVtbGJrMXVPdVRCWTRERXNneVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUk0RVM2eW1qQXdhOUk5SklwQkdaZXd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU1URTFNVFF3TlZvWERUSTJNRFV5TURFMQpNVFF3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwRFpRWnAwdkl0V2FWRDRleWdFVEhSaFBHaUpTRUZLeGFnYjk3WVJHSGxnWExXVzUKMk1NUGhhTlRDOUhLOVNoYXJjSkF1WldhYTc2TmU3U1BGN1hBOXZES1pweitIbHEzeEJQakNUckZOcXBkY0JWawpzblI0c29SRmlzYWl0OXh3NzlKV1hPNTNhUytXdk5QSlk1SnVkV095U0owZnE4YkRlazZnNTNZcjZ1eEZuRWxLCkR3amx0NzZTK2tSRlMyZXdxcXJqRHYrT0FvSklLbHF3ZE5PMHlEVjQ3bGo1alIvdlYrSitBcXMzbVRiZnI3YWUKZ2FIaTR1YnRzL254ZEwrVzgyVEgycmRFRGZiZ2FmZ3JMbmxic0NycHFRbWJEWUNYVU5icFNzTlZEQ1M4MXo1TwpjUi9jaDMvdDkrUTlRWnQ4OHJvazlJWjZlRlYrUjZveHJhQVRCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSDI5NGxJMTFyREpJNjZ0YWZOemtianFJcm8yTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3FFRTgvZ0FqS2VQOFJmZHorZDE1MEg4UTNiZWVwZitTU1JUSWpxWmZCM3E2RWRxRS9QUmptCnJ6cGR3WThYNisySEhYMUp6WGJsYzl6NjJFSWpYdzc3YUVYMkJKNlMzV3NIenpzZ3NkTUc0L3o4QU82RWtpM1QKbmdXUEx4TmNsNEJKR3VlbWFGaVk2UkwxdG9XUGRqU2RYL3ZJM1VPVCsrVDhwSTRtbkhZTXBxUE5vSFRBa2tUMQoxeHBlZkpkd0FkNlBwTUJSTm1nKzQ2V3lmU2c0SmM1cjlHZDJFZ1lCbTZGM3JUWExPSjI5SFVVcEExSTFQWDgrCkJrNE1nVG84clFEZTdlWDR2UEhqOThMM1lQVHRXRVhTcHZxcnczemp0dGZNand4R2lzc2g3T3dIUi93blJURngKM1A2c0JGcWNsRXJETlJYK3greURscVN6MU5FU0R3UGUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWRENDQWp5Z0F3SUJBZ0lRUjVvZVhVYlFtbHJvcDdhT1NPd3pwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJeE1UVXhOREExV2hjTk1qWXdOVEl3TVRVeApOREExV2pBcE1TY3dKUVlEVlFRRERCNHFMbXR2YTI5eWJ5NW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURMSDA3OFhnNHVBR25Cd0ozdVhaUS8KRjVQVVBMcFdPQ1ljeDFxbEZCc3ZjZTdONm5iVnZzNk9qSCtQY2VXWk5VemVNOEo4UDhFUG8zWXlOL01PdTBEaApNbDFDajlXUzZuMWNkNE9aZHNyaWh0SWZQZk15TjBvdG5zODZuTkhRNDArWElmNS84b1RyWHU0OUVWU29XYzErCnlvNWV2dTZ6OFZac3F3eWRjeTF3T2ZvbFQzcmdtLzhITWpTRmdNSTF1enIzdEs4SnM0VVhFQXJrQi9BY29pNEkKYWd5ZGFvYmF3ZW44R3FVRVJ2VzMwajFHUUpUbFFpVkJGeThoSkxxRlhFclFibXBmS0VleVhTZjBwMXM1cXBUTQphYmdPc3NuNFpiSlVBNXU2QmtGcitYM2lFQ1FFQXduMWYvUmsxT1M1Q0l5U1RxVThSMVRGN0VURlR2M0Y1TkJ6CkFnTUJBQUdqZ1l3d2dZa3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkgyOTRsSTExckRKSTY2dAphZk56a2JqcUlybzJNQ2tHQTFVZEVRUWlNQ0NDSGlvdWEyOXJiM0p2TG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBV2NHaDhLd3IzWDF1T0F5N3hpVmM2S3pDeTVDQWNTZ04KWE4xRHVzaUd1MlRRSElscWQ4bnBHYTRhbGMyNlA0NndxRjA5ZFVVaGpXUEVWenc3elQrMi9GeUhLeDRCd0FISAptTXZnZStrSWpteHQ5L0pINkNCRjhlOHVQSTVvU2RjVGFkOGg5RVdMYkxWay9zMVk1RERQTmZhQ3BBd1NmSVhBCjZOWmtTcG5SK0IzOTlVUDJSdVJuWkROVTI4M2prendSa0c5ZjFBQkJLT0tJM28rWkRaUy9vMTJoNDNpcnYxNDAKRVRYbFc0Snhwb2syeklsaEtkekVicnRJM1FjT2ovazBncnlQZTVJUDdNdDJmTHZIb2VoSE9XRGc3NkExVU1rbApxU0oxZ2NYMHRxSXgxb25RbnYwUzlXYWc3MFZxK09vc0ZiOGplZDk2NE54TXk2c2hZL2NVeXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeXg5Ty9GNE9MZ0Jwd2NDZDdsMlVQeGVUMUR5NlZqZ21ITWRhcFJRYkwzSHV6ZXAyCjFiN09qb3gvajNIbG1UVk0zalBDZkQvQkQ2TjJNamZ6RHJ0QTRUSmRRby9Wa3VwOVhIZURtWGJLNG9iU0h6M3oKTWpkS0xaN1BPcHpSME9OUGx5SCtmL0tFNjE3dVBSRlVxRm5OZnNxT1hyN3VzL0ZXYktzTW5YTXRjRG42SlU5Ngo0SnYvQnpJMGhZRENOYnM2OTdTdkNiT0ZGeEFLNUFmd0hLSXVDR29NbldxRzJzSHAvQnFsQkViMXQ5STlSa0NVCjVVSWxRUmN2SVNTNmhWeEswRzVxWHloSHNsMG45S2RiT2FxVXpHbTREckxKK0dXeVZBT2J1Z1pCYS9sOTRoQWsKQkFNSjlYLzBaTlRrdVFpTWtrNmxQRWRVeGV4RXhVNzl4ZVRRY3dJREFRQUJBb0lCQVFDZ2ZOTkdtUFh4S01obQptczd0MkNoYWxVRnJEclJYalRPbngyZDZTT0dWNGhwQnZrQTRiL0w2TkU1UlF6ZWFqcjkyVFVVY01LOVVzTjJoCm5nMUFGWG1VdE50MHpQcDlneUtiblo1djhha3B4RVpmQXU2VlBaUXhhV25vc0tFaXY0ZFNMVHpOVVF2dWdHb1IKL0JCOGw3L0NyejQvNC9Ic1lRSGRDR1VHUGt1bmYrMDZadVdmdisrcXdtY2NLcVE1dUtTS3ArK2J4TkRiby9vOQpDakgzQngvWG4vTXRYMnZNK0NzTFA0RW1zYU5INzVGTFQ3bE01WENNTG5wL1dteXVaQ2pCRERIbVplUk1DZWhaCm02Q0dxWXlrdlUrMVltMXdLVTRvbTZEcnB6WkZmRWF6TENjd3lobStYQ0dpakszU3lCRERrQVVRVXpsL2gra04KeDdxeVZzR1JBb0dCQU0yWjlVOVlmbmJFYWJadk9CRk9HNVhuMWVqOHQzSEFiVWpvdERJd05IVnVPQjBHbkRzbgpCMVNVd0k1VFhtUktjN25iNmd2VFlHcngzYWI3dW91NjNLNGhjajV6T0o4NGptZjRmT0pmRndKUDNEamRsTjNTCkhoUGd3ZWFXd1REZXRvYmpSc2lGeWpQQmRnSVZvRitTTUdSQWl4Q2N4VWdFSVdVNmI0cS9yNnhiQW9HQkFQenAKeDdKeFNxTnFEVjNhM3BGOVRRQlRLMHlHdGhPa2h4ZWY4NndLVlhPLytQQk1wandFb1lYZU1NelgwcXZ5eW5vZwpXNEdHLzhFN21PcUJmc250TDRleUZ3Nkc5OHdhRlRWZGprMjJRTldsNFFXVUVzS1FRT1RIRVJKallHeXdFdVQyCmIrR0VlWUFTeHVSMzBwcTRQWElGR1pzeVhybi9VbnlFaVMwSndBZkpBb0dBSVVIYkxYZUtGVm9XSTMyQUcwU0EKTDlKdGhwK0NhUE1RZW0reDNrQnY2K0xsVHNTbjl1V01TUUU2MklyaHhPVktMUEZHdlp6MmhyWVMvWlRRaXhPeAo2TFRlVHYzQ1ZmY0hDZ2htNHhNd25KNGdhRTVuYXk0MjBVNVU3eURKcFVjUlRXWnNKN21FaUxTdGl3N0dmMDhkClpzb045S1QzUUh2eWp2WlIzcWE5R3VzQ2dZQi83Y2pEYkNieTdld0E4M3J0WU5JWVBmbUM1Z2tuZW11UythZUoKK0ZndENvZmpGUUpwRFhhZWZqdDFBaDVnTjVsUG1ScHdORmNkNlFWNmFUSTI5YkM3Rk13dzN2aHMxeXl2SjdtWgplWHptRk5menVHaWMzZGJWWWhReWx1M3BURTdpWGYxTnQzSzE0OG1UTzBEZVhoOUdrMm5XWk80aGF4TFFSVUlWCjgvNmNjUUtCZ1FEQWxVZVhPMkxkOFBTdDFDL0JkZEcvNEc4Ly9lQW5QSXd0eUQrU2pIMk1UT3NpMmtNVlZyeVkKS3ZFdWR0eW44ZE1FWUJPTm5mempoSU5RZFQwV1JWbzVQVEZHSnorUWJVdzFhdGVWMDNtQUc5MVUyem13Z1lMawprMU92REtpTjl3OWlLSWF2ZklVdXZQMkFFK0NXNXprblk1NFBNd0dSNnlDZUN4eTVkWVdsUUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 012bcb6a883e8852a2bbb932c50f017ab53c88ff6927ca47ced1bab3361c620e
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster.ctec.run
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 3700c70d5077ca6c0f4a1565a15bf0f7aa6789d782dcc5a64a1095ed0bc96507
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 012bcb6a883e8852a2bbb932c50f017ab53c88ff6927ca47ced1bab3361c620e
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster.ctec.run
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: cluster.ctec.run
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster.ctec.run
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
