---
version: "3"

vars:
  cniDir: "{{.PROJECT_DIR}}/infrastructure/talos/integrations/cni"
  csrDir: "{{.PROJECT_DIR}}/infrastructure/talos/integrations/kubelet-csr-approver"

tasks:

  cilium:
    desc: 2. Bootstrap cilium
    cmds:
      - rm -rf {{.cniDir}}/charts
      - echo "# This manifest was generated by automation. DO NOT EDIT." > {{.cniDir}}/cilium.yaml
      - kustomize build --enable-helm --load-restrictor=LoadRestrictionsNone {{.cniDir}} >> {{.cniDir}}/cilium.yaml
      - rm -rf {{.cniDir}}/charts
      - kubectl apply -f {{.cniDir}}/cilium.yaml

  csr-approver:
    desc: 1. Bootstrap the CSR Approver
    cmds:
      - rm -rf kubelet-csr-approver/charts
      - envsubst < {{.CLUSTER_DIR}}/apps/system-controllers/kubelet-csr-approver/app/values.yaml > {{.csrDir}}/values.yaml
      - kubectl create ns system-controllers
      - kustomize build --enable-helm {{.csrDir}} | kubectl apply -f -
      - rm {{.csrDir}}/values.yaml
      - rm -rf {{.csrDir}}/charts

  doppler:
    desc: 4. Bootstrap Doppler
    cmds:
      - kubectl create secret generic  -n flux-system cluster-secrets --from-env-file <(doppler secrets download -p cluster -c prd --no-file --format docker)
      - kubectl create secret generic -n flux-system doppler-token-auth-api --from-literal dopplerToken=$(doppler secrets -p doppler -c prd get DOPPLER_PAT --plain)
      - doppler secrets -p cluster -c prd get GITHUB_DEPLOY_KEY --plain | kubectl apply -f -

  flux:
    desc: 3. Bootstrap flux (as per version in manifest)
    cmds:
      - kubectl apply -n flux-system --server-side --kustomize {{.CLUSTER_DIR}}/bootstrap/flux
      - kubectl apply -f {{.CLUSTER_DIR}}/flux/vars/cluster-settings.yaml

  cluster:
    desc: 8. Bootstrap Cluster
    cmds:
      - kubectl apply --server-side --kustomize {{.CLUSTER_DIR}}/flux/config/

  crds:
    desc: 6. Bootstrap CRDs
    cmds:
      - kubectl apply --server-side --kustomize {{.CLUSTER_DIR}}/bootstrap/crds/

  rook:
    desc: 7. Wipe Rook
    cmds:
      - kubectl label --overwrite ns default pod-security.kubernetes.io/enforce=privileged pod-security.kubernetes.io/warn=baseline pod-security.kubernetes.io/audit=baseline
      - kubectl apply -f tools/wipe-rook.yaml -n default
      - kubectl label ns default pod-security.kubernetes.io/audit- pod-security.kubernetes.io/enforce- pod-security.kubernetes.io/warn-

  all:
    desc: run all bootstrap commands in order
    cmds:
      - go-task bs:csr-approver
      - go-task bs:cilium
      - go-task bs:flux
      - go-task bs:doppler
      - go-task bs:crds
      - go-task bs:rook
      - go-task bs:cluster

  prep:
    desc: run all bootstrap commands in order
    cmds:
      - go-task bs:csr-approver
      - go-task bs:cilium
      - go-task bs:flux
      - go-task bs:doppler
      - go-task bs:crds
