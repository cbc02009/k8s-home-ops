---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

x-env: &env
  DISK: "{{.DISK}}"
  JOB: "{{.JOB}}"
  NODE: "{{.NODE}}"

vars:
  ROOK_RESOURCES_DIR: "{{.ROOT_DIR}}/.taskfiles/Rook/resources"

tasks:

  reset-all:
    vars: &vars
      CLUSTER: main
      NODES: sakura miri uiharu
      DISK: /dev/nvme0n1
    cmds:
      - task: reset
        vars: *vars

  reset:
    internal: true
    vars: &vars
      CLUSTER: '{{.CLUSTER}}'
      NODE: '{{.ITEM}}'
      DISK: '{{.DISK}}'
      NS: "default"
    cmds:
      - for: { var: NODES }
        task: rook-data
        vars: *vars
      - for: { var: NODES }
        task: rook-disk
        vars: *vars

  rook-disk:
    internal: true
    cmds:
      - envsubst < <(cat {{.ROOK_RESOURCES_DIR}}/rook-disk-job.tmpl.yaml) | kubectl apply -f -
      - bash {{.ROOK_RESOURCES_DIR}}/wait-for-job.sh {{.JOB}} {{.NS}}
      - kubectl --context {{.CLUSTER}} --namespace {{.NS}} wait job/{{.JOB}} --for condition=complete --timeout=1m
      - kubectl --context {{.CLUSTER}} --namespace {{.NS}} logs job/{{.JOB}}
      - kubectl --context {{.CLUSTER}} --namespace {{.NS}} delete job {{.JOB}}
    vars:
      JOB: wipe-disk-{{.NODE}}
      NS: '{{.NS | default "default"}}'
    env:
      DISK: '{{.DISK}}'
      JOB: '{{.JOB}}'
      NODE: '{{.NODE}}'
      NS: '{{.NS}}'
    # preconditions:
    #   - test -f envsubst
    #   - test -f {{.ROOK_RESOURCES_DIR}}/wait-for-job.sh
    #   - test -f {{.ROOK_RESOURCES_DIR}}/rook-disk-job.tmpl.yaml

  rook-data:
    internal: true
    cmds:
      - envsubst < <(cat {{.ROOK_RESOURCES_DIR}}/rook-data-job.tmpl.yaml) | kubectl apply -f -
      - bash {{.ROOK_RESOURCES_DIR}}/wait-for-job.sh {{.JOB}} {{.NS}}
      - kubectl --context {{.CLUSTER}} --namespace {{.NS}} wait job/{{.JOB}} --for condition=complete --timeout=1m
      - kubectl --context {{.CLUSTER}} --namespace {{.NS}} logs job/{{.JOB}}
      - kubectl --context {{.CLUSTER}} --namespace {{.NS}} delete job {{.JOB}}
    vars:
      JOB: wipe-data-{{.NODE}}
      NS: '{{.NS | default "default"}}'
    env:
      DISK: '{{.DISK}}'
      JOB: '{{.JOB}}'
      NODE: '{{.NODE}}'
      NS: '{{.NS}}'
    # preconditions:
    #   - test -f envsubst
    #   - test -f {{.ROOK_RESOURCES_DIR}}/wait-for-job.sh
    #   - test -f {{.ROOK_RESOURCES_DIR}}/rook-data-job.tmpl.yaml