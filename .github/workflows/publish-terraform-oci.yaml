---
name: "Terraform: Build OCI artifacts"

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "infrastructure/terraform/**"

jobs:
  changed-files:
    name: Generate matrix for building images
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate Token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        id: generate-token
        with:
          app_id: "${{ secrets.BOT_APP_ID }}"
          private_key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          token: "${{ steps.generate-token.outputs.token }}"

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Tools
        run: |
          brew install jo

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.9.0
        with:
          dir_names: true
          dir_names_max_depth: 3
          json: true
          files: |
            infrastructure/terraform/**

      - name: List all changed files
        run: |
          echo '${{ steps.changed-files.outputs.all_changed_files }}'

      - name: Store changed projects
        id: set-matrix
        run: |
          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" == "[]" ]]; then
            echo "matrix={\"project\":$(find infrastructure/terraform -type d -mindepth 1 -maxdepth 1 | jo -a)}" >> "${GITHUB_OUTPUT}"
          else
            echo "matrix={\"project\":${{ steps.changed-files.outputs.all_changed_files }}}" >> "${GITHUB_OUTPUT}"
          fi

  publish:
    runs-on: ubuntu-22.04
    needs:
      - changed-files
    strategy:
      matrix: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
    steps:
      - name: Generate Token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        id: generate-token
        with:
          app_id: "${{ secrets.BOT_APP_ID }}"
          private_key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          token: "${{ steps.generate-token.outputs.token }}"

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Tools
        run: |
          brew install fluxcd/tap/flux

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish OCI
        run: |
          flux push artifact oci://ghcr.io/cbc02009/terraform-$(basename ${{ matrix.project }}):$(git rev-parse --short HEAD) \
            --path="./${{ matrix.project }}" \
            --source="$(git config --get remote.origin.url)" \
            --revision="$(git branch --show-current)/$(git rev-parse HEAD)"

      - name: Tag OCI
        run: |
          flux tag artifact oci://ghcr.io/cbc02009/terraform-$(basename ${{ matrix.project }}):$(git rev-parse --short HEAD) \
            --tag main
